{"ast":null,"code":"var _jsxFileName = \"/Users/cristinadiaz/Development/code/foodster/client/src/components/LoginForm.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useRecoilState } from 'recoil';\nimport { currentUserState, currentAuthState } from '../recoil/atoms';\nimport api from '../api/posts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LoginForm() {\n  _s();\n  let navigate = useNavigate();\n  const userRef = useRef();\n  const errRef = useRef();\n  const [loginForm, setLoginForm] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const [currentUser, setCurrentUser] = useRecoilState(currentUserState);\n  const [currentAuth, setCurrentAuth] = useRecoilState(currentAuthState);\n\n  // useEffect(() => {\n  //     userRef.current.focus()\n  // }, [])\n\n  // useEffect(() => {\n  //     setErrorMessage('')\n  // }, [currentUser, pass])\n\n  const handleChange = e => setLoginForm({\n    ...loginForm,\n    [e.target.name]: e.target.value\n  });\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await api.post('login', {\n        username: loginForm.username,\n        password: loginForm.password\n      }, {\n        headers: {\n          'content-type': 'multipart/form-data'\n        }\n      });\n      setCurrentUser(response.data);\n      console.log(response.data);\n      //localStorage.setItem('user', JSON.stringify(response.data))\n      navigate('/favorites', {\n        replace: true\n      });\n    } catch (err) {\n      var _err$response, _err$response2;\n      if (!(err !== null && err !== void 0 && err.response)) {\n        setErrorMessage('No Server Response');\n      } else if (((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.status) === 400) {\n        setErrorMessage('Missing Username or Password');\n      } else if (((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : _err$response2.status) === 401) {\n        setErrorMessage('Unauthorized');\n      } else {\n        setErrorMessage('Login Failed');\n      }\n      // errRef.current.focus()\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" Sign In \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"username\",\n        value: loginForm.username,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"password\",\n        value: loginForm.password,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n_s(LoginForm, \"NCUrKPHFoGuUJzN48DHv/P9rOc4=\", false, function () {\n  return [useNavigate, useRecoilState, useRecoilState];\n});\n_c = LoginForm;\nexport default LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["React","useEffect","useState","useRef","useNavigate","useRecoilState","currentUserState","currentAuthState","api","LoginForm","navigate","userRef","errRef","loginForm","setLoginForm","errorMessage","setErrorMessage","currentUser","setCurrentUser","currentAuth","setCurrentAuth","handleChange","e","target","name","value","handleSubmit","preventDefault","response","post","username","password","headers","data","console","log","replace","err","status"],"sources":["/Users/cristinadiaz/Development/code/foodster/client/src/components/LoginForm.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react'\nimport { useNavigate } from 'react-router-dom'\n\nimport { useRecoilState } from 'recoil'\nimport { currentUserState, currentAuthState } from '../recoil/atoms'\nimport api from '../api/posts'\n\n\nfunction LoginForm() {\n\n    let navigate = useNavigate()\n    const userRef = useRef()\n    const errRef = useRef()\n    const [loginForm, setLoginForm] = useState('')\n    const [errorMessage, setErrorMessage] = useState('')\n    const [currentUser, setCurrentUser] = useRecoilState(currentUserState)\n    const [currentAuth, setCurrentAuth] = useRecoilState(currentAuthState)\n\n    // useEffect(() => {\n    //     userRef.current.focus()\n    // }, [])\n\n    // useEffect(() => {\n    //     setErrorMessage('')\n    // }, [currentUser, pass])\n\n\n    const handleChange = (e) => setLoginForm ({...loginForm, [e.target.name]: e.target.value})\n\n    const handleSubmit = async (e) => {\n        e.preventDefault()\n        try{\n            const response = await api.post('login',{\n                username: loginForm.username,\n                password: loginForm.password\n            },\n            {headers: {\n                'content-type': 'multipart/form-data'\n            }\n        })\n        setCurrentUser(response.data)\n        console.log(response.data)\n        //localStorage.setItem('user', JSON.stringify(response.data))\n        navigate('/favorites', { replace: true })\n        }\n        catch (err) {\n            if (!err?.response) {\n                setErrorMessage('No Server Response')\n            } else if (err.response?.status === 400) {\n                setErrorMessage('Missing Username or Password')\n            } else if (err.response?.status === 401) {\n                setErrorMessage('Unauthorized')\n            } else {\n                setErrorMessage('Login Failed')\n            }\n            // errRef.current.focus()\n        }\n    }\n\n  return (\n    <div>\n        <h1> Sign In </h1>\n        <form onSubmit={handleSubmit}>\n            <label>Email</label>\n            <input\n                type='text'\n                name='username'\n                value={loginForm.username}\n                onChange={handleChange}\n            />\n            <label>Password</label>\n            <input\n                type='text'\n                name='password'\n                value={loginForm.password}\n                onChange={handleChange}\n            />\n            <button>Sign In</button>\n        </form>\n    </div>\n  )\n}\n\nexport default LoginForm"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}